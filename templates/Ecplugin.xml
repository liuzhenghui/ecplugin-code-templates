<templateSet group="Ecplugin">
  <template name="ecApiPost" value="@ApiOperation(value = &quot;$desc$&quot;, notes = &quot;&quot;, httpMethod = &quot;POST&quot;)&#10;@POST&#10;@Path(&quot;/$path$&quot;)&#10;@Produces(MediaType.APPLICATION_JSON)&#10;public ApiResult&lt;$resultType$&gt; $path$(&#10;        @ApiParam(value = &quot;$param$&quot;, required = true) @FormParam(&quot;$param$&quot;) String $param$&#10;    ) {&#10;    ApiResult&lt;$resultType$&gt; result = new ApiResult&lt;&gt;();&#10;    try {&#10;        if (StringUtils.isBlank($param$)) {&#10;            throw new IllegalArgumentException(&quot;参数[$param$]不能为空&quot;);&#10;        }&#10;        &#10;        result.success($END$);&#10;    } catch (IllegalArgumentException e) {&#10;        log.warn(e.getMessage());&#10;        result.fail(e.getMessage());&#10;    } catch (Exception e) {&#10;        log.error(&quot;$path$&quot;, e);&#10;        result.fail(e.getMessage());&#10;    }&#10;    return result;&#10;}" description="ecplugin api-创建post接口" toReformat="true" toShortenFQNames="true">
    <variable name="desc" expression="" defaultValue="接口说明" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="路径" alwaysStopAt="true" />
    <variable name="resultType" expression="" defaultValue="返回类型" alwaysStopAt="true" />
    <variable name="param" expression="" defaultValue="参数" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="ecApiGet" value="@ApiOperation(value = &quot;$desc$&quot;, notes = &quot;&quot;, httpMethod = &quot;GET&quot;)&#10;@GET&#10;@Path(&quot;/$path$&quot;)&#10;@Produces(MediaType.APPLICATION_JSON)&#10;public ApiResult&lt;$resultType$&gt; $path$(&#10;        @ApiParam(value = &quot;$param$&quot;, required = true) @QueryParam(&quot;$param$&quot;) String $param$&#10;    ) {&#10;    ApiResult&lt;$resultType$&gt; result = new ApiResult&lt;&gt;();&#10;    try {&#10;        if (StringUtils.isBlank($param$)) {&#10;            throw new IllegalArgumentException(&quot;参数[$param$]不能为空&quot;);&#10;        }&#10;        &#10;        result.success($END$);&#10;    } catch (IllegalArgumentException e) {&#10;        log.warn(e.getMessage());&#10;        result.fail(e.getMessage());&#10;    } catch (Exception e) {&#10;        log.error(&quot;$path$&quot;, e);&#10;        result.fail(e.getMessage());&#10;    }&#10;    return result;&#10;}" description="ecplugin api-创建get接口" toReformat="false" toShortenFQNames="true">
    <variable name="desc" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="resultType" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="param" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="ecApiPage" value="@ApiOperation(value = &quot;$desc$&quot;, notes = &quot;&quot;, httpMethod = &quot;GET&quot;)&#10;@GET&#10;@Path(&quot;/$path$&quot;)&#10;@Produces(MediaType.APPLICATION_JSON)&#10;public ApiResult&lt;PageDto&lt;$resultType$&gt;&gt; $path$(&#10;        @ApiParam(value = &quot;$param$&quot;, required = true) @QueryParam(&quot;$param$&quot;) String $param$,&#10;        @ApiParam(&quot;每页行数&quot;) @QueryParam(&quot;pageSize&quot;) Integer pageSize,&#10;        @ApiParam(&quot;页码&quot;) @QueryParam(&quot;pageNum&quot;) Integer pageNum&#10;    ) {&#10;    ApiResult&lt;PageDto&lt;$resultType$&gt;&gt; result = new ApiResult&lt;&gt;();&#10;    try {&#10;        if (StringUtils.isBlank($param$)) {&#10;            throw new IllegalArgumentException(&quot;参数[$param$]不能为空&quot;);&#10;        }&#10;        if (pageSize == null || pageSize &lt;= 0) {&#10;            pageSize = 10;&#10;        }&#10;        if (pageNum == null || pageNum &lt;= 0) {&#10;            pageNum = 0;&#10;        }&#10;&#10;        result.success(null$END$);&#10;    } catch (IllegalArgumentException e) {&#10;        log.warn(e.getMessage());&#10;        result.fail(e.getMessage());&#10;    } catch (Exception e) {&#10;        log.error(&quot;$path$&quot;, e);&#10;        result.fail(e.getMessage());&#10;    }&#10;    return result;&#10;}" description="ecplugin api-创建分页接口" toReformat="false" toShortenFQNames="true">
    <variable name="desc" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="resultType" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="param" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="ecLogMethodParameters" value="log.info(&quot;$METHOD_NAME$::$PLACE_HOLDERS$&quot;,$ARGUMENTS$);" description="ecplugin 打印方法所有参数" toReformat="false" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="" defaultValue="methodName()" alwaysStopAt="true" />
    <variable name="PLACE_HOLDERS" expression="" defaultValue="groovyScript(&quot;_1.collect { it + ' = [{}]'}.join(', ') &quot;, methodParameters())" alwaysStopAt="true" />
    <variable name="ARGUMENTS" expression="" defaultValue="groovyScript(&quot;_1.collect { it }.join(', ') &quot;, methodParameters())" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ecTry" value="try {&#10;    log.info(&quot;--- -开始 ---&quot;);&#10;    &#10;} catch (Exception e) {&#10;    log.error(&quot;--- -异常 ---&quot;,e);&#10;    &#10;} finally {&#10;    log.info(&quot;--- -结束 ---&quot;);&#10;}" description="ecplugin 异常处理" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ecSqlSessionMapper" value="try (SqlSession session = sqlSessionFactory.openSession(true)) {&#10;    $mapper$Mapper $mapperCamel$Mapper = session.getMapper($mapper$Mapper.class);&#10;&#10;}" description="ecplugin 打开session返回Mapper" toReformat="false" toShortenFQNames="true">
    <variable name="mapper" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="mapperCamel" expression="camelCase(mapper)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ecLombok" value="import lombok.AllArgsConstructor;&#10;import lombok.Builder;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;@Data&#10;@Builder&#10;@AllArgsConstructor&#10;@NoArgsConstructor" description="ecplugin lombok四件套" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="ecProp" value="String $key$ = PropUtil.getPropValue(&quot;YourFileName&quot;,&quot;$key$&quot;);" description="ecplugin 获取配置文件中值" toReformat="false" toShortenFQNames="true">
    <variable name="key" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>